generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// √úr√ºn tablosu
model Product {
  id        Int      @id @default(autoincrement())
  modelNo   String   @unique
  name      String
  createdAt DateTime @default(now())
}

// Kuma≈ü tipi tablosu
model FabricType {
  id      Int           @id @default(autoincrement())
  name    String
  entries FabricEntry[] // ters ili≈üki
}

// Renk tablosu
model Color {
  id      Int           @id @default(autoincrement())
  name    String
  entries FabricEntry[] // ters ili≈üki
}

// Kesim masasƒ± tablosu
model CuttingTable {
  id    Int          @id @default(autoincrement())
  name  String
  exits FabricExit[] // FabricExit ile ili≈üki
}

// Kuma≈ü giri≈ü tablosu
model FabricEntry {
  id            Int          @id @default(autoincrement())
  fabricTypeId  Int
  fabricType    FabricType   @relation(fields: [fabricTypeId], references: [id])
  colorId       Int
  color         Color        @relation(fields: [colorId], references: [id])
  quantityKg    Float
  lengthMeter   Float?
  entryDate     DateTime     @default(now())
  fabricExits   FabricExit[] @relation("FabricEntryToFabricExit") // Ters ili≈üki
}

// Kuma≈ü √ßƒ±kƒ±≈ü tablosu
model FabricExit {
  id              Int           @id @default(autoincrement())
  modelNo         String
  orderNo         String
  customerId      String
  layerCount      Int
  productWeightKg Float
  exitDate        DateTime      @default(now())

  // Ek alanlar
  weightKg        Float?
  lengthMeter     Float?

  // Kesim masasƒ± ile ili≈üki
  cuttingTableId  Int
  cuttingTable    CuttingTable  @relation(fields: [cuttingTableId], references: [id])

  // Kuma≈ü giri≈üi ile ili≈üki
  fabricEntryId   Int
  fabricEntry     FabricEntry   @relation("FabricEntryToFabricExit", fields: [fabricEntryId], references: [id])
}

// Kullanƒ±cƒ± tablosu (JWT i√ßin)
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String   // hash'li saklanacak
  role      Role     @default(OPERATOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  OPERATOR
}

// M√º≈üteri tablosu
model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String?
  email     String?
  createdAt DateTime @default(now())
}

// üéØ Yeni: Kuma≈ü Kartƒ± (Kuma≈ü Ekle i√ßin serbest tablo)
model Fabric {
  id            Int      @id @default(autoincrement())
  code          String?  @unique
  name          String
  property      String?
  width         Float?
  length        Float?
  depot         String?
  unit          String?     // metre, kg, top
  stockQuantity Float       @default(0)
  createdAt     DateTime    @default(now())
}
