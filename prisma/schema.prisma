generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int      @id @default(autoincrement())
  modelNo   String   @unique
  name      String
  createdAt DateTime @default(now())
}


model FabricType {
  id      Int           @id @default(autoincrement())
  name    String
  entries FabricEntry[] // ters ilişki
}

model Color {
  id      Int           @id @default(autoincrement())
  name    String
  entries FabricEntry[] // ters ilişki
}

model CuttingTable {
  id    Int          @id @default(autoincrement())
  name  String
  exits FabricExit[] // FabricExit ile ilişki
}

model FabricEntry {
  id            Int          @id @default(autoincrement())
  fabricTypeId  Int
  fabricType    FabricType   @relation(fields: [fabricTypeId], references: [id])
  colorId       Int
  color         Color        @relation(fields: [colorId], references: [id])
  quantity      Float
  createdAt     DateTime     @default(now())
  fabricExits   FabricExit[] @relation("FabricEntryToFabricExit") // Ters ilişki
}

model FabricExit {
  id              Int           @id @default(autoincrement())
  modelNo         String
  orderNo         String
  customerId      String
  layerCount      Int
  productWeight   Float
  createdAt       DateTime      @default(now())

  // Kesim masası ile ilişki
  cuttingTableId  Int
  cuttingTable    CuttingTable  @relation(fields: [cuttingTableId], references: [id])

  // Kumaş girişi ile ilişki
  fabricEntryId   Int
  fabricEntry     FabricEntry   @relation("FabricEntryToFabricExit", fields: [fabricEntryId], references: [id])
}

model AdminUser {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
}